@model ShowArticleViewModel

@{
    bool isAdmin = User.IsInRole("مدیر");
}
<div class="about-two">
    <ol class="breadcrumb">
        <li><a href="/">خانه</a></li>
        <li><a href="/articles/category/@Model.CategoryTitle">@Model.CategoryTitle</a></li>
        <li class="active"><a href="#">@Model.Title</a></li>
    </ol>
    <h2 id="article-title">
        @Model.Title
        <ul class="blog-ic pull-left">
            <li><span>زمان مطالعه @Model.TimeToRead دقیقه</span></li>
            <li><span><i class="glyphicon glyphicon-time"> </i>@Model.Date</span></li>
            <li><span><i class="glyphicon glyphicon-eye-open"> </i>@Model.View</span></li>
            <li><span><i class="glyphicon glyphicon-list"> </i>@Model.CategoryTitle</span></li>
        </ul>
    </h2>
    <section id="article-img-container" class="d-flex">
        <a href="#"><img src="@Model.Image" class="article-img" alt="@Model.Title"></a>
    </section>
    <div class="content-container">
        @Html.Raw(Model.Content)
    </div>
    <p class="tags">
        <span class="title-bordered">برچسب ها</span>
        @foreach (var item in Model.Tags)
        {
            <a href="/search?q=@item">#@item</a>
        }
    </p>
    <div class="Comments-articles mb-3 mt-5 shadow p-3 rounded-3 ">
        <div class="comment-article-titl mb-4 ">
            <p>
                <i class="bi bi-chat-right-text "></i> نظرات خود را با ما به اشتراک بگذارید
            </p>
        </div>
        <div class="validation-summary-errors" data-valmsg-summary="true">
            <ul></ul>
        </div>
        <div class="mb-3 ">
            <label for="name">نام</label>
            <input type="text" class="form-control " id="name" placeholder="نام خود را وارد کنید">
        </div>
        <div class="mb-3 ">
            <label for="email">ایمیل</label>
            <input type="text" class="form-control " id="email" placeholder="ایمیل خود را وارد کنید ">
        </div>
        <div class="mb-3">
            <label for="comment_text">کامنت</label>
            <textarea class="form-control " placeholder="نظر خود را وارد کنید" id="text" style="height: 100px "></textarea>
        </div>
        <button type="button" onclick="addComment()" class="btn btn-block btn-primary mt-4 w-25 ">ثبت نظر</button>
        <button id="cancel-response" type="button" onclick="cancelResponse()" class="btn hidden btn-block btn-danger mt-4 w-25 ">لغو پاسخ</button>
        <div class="containers-comment">
            @foreach (var item in Model.Comments.Where(n => !n.ParentId.HasValue))
            {
                <div data-comment-id="@item.Id" class="alert border mt-4 comment-box " role="alert">
                    <h4 class="alert-heading name-person-comment ">
                        @item.Name
                        <i class="bi bi-person-fill "></i>
                        <span class="h6 "> نوشته شده در تاریخ @item.Date </span>
                        <a class="btn btn-success btn-sm response-btn" href="#name" onclick="responseComment(@item.Id)">پاسخ</a>
                        @if (isAdmin)
                        {
                            <button class="btn btn-danger btn-sm response-btn" onclick="removeComment(@item.Id)">حذف</button>
                        }
                    </h4>
                    <p>@item.Text</p>
                    <div class="response-container">

                        @foreach (var child in Model.Comments.Where(n => n.ParentId.HasValue && n.ParentId.Value == item.Id))
                        {

                        <div data-comment-id="@child.Id" class="response-comment border-top pt-2 ">
                            <h4 class="alert-heading ">
                                @child.Name
                                <i class="bi bi-person-fill "></i>
                                <span class="h6 "> نوشته شده در تاریخ @child.Date </span>
                            </h4>
                            <p class="mr-3 ">@child.Text</p>
                            @if (isAdmin)
                            {
                                <button class="btn btn-danger btn-sm response-btn" onclick="removeComment(@child.Id)">حذف</button>
                            }

                        </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
    HTMLElement.prototype.appendFirst = function(childNode) {
    if (this.firstChild) {
        this.insertBefore(childNode, this.firstChild);
    }
    else {
        this.appendChild(childNode);
    }
};
    let parentId = null;
    const addComment = () => {
        const errUl = document.querySelector('.validation-summary-errors>ul');
        const name = document.getElementById('name').value;
        const email = document.getElementById('email').value;
        const text = document.getElementById('text').value;
        if (name === "") {
            const liElem = document.createElement('li');
            liElem.id = "empty-name"
            liElem.innerHTML = "لطفا نام خود را وارد کنید";
            if (document.getElementById(liElem.id) === null)
                errUl.appendChild(liElem);
        } else {
            const liElem = document.getElementById("empty-name");
            if (liElem !== null) {
                liElem.remove();
            }
        } if (name.length > 125) {
            const liElem = document.createElement('li');
            liElem.id = "max-name"
            liElem.innerHTML = "لطفا نام خود را کمتر از 125 کرکتر وارد کرد";
            if (document.getElementById(liElem.id) === null)
                errUl.appendChild(liElem);
        }else {
            const liElem = document.getElementById("max-name");
            if (liElem !== null) {
                liElem.remove();
            }
        } if (email === "") {
            const liElem = document.createElement('li');
            liElem.id = "empty-email"
            liElem.innerHTML = "لطفا ایمیل خود را وارد کرد";
            if (document.getElementById(liElem.id) === null)
                errUl.appendChild(liElem);
        }else {
            const liElem = document.getElementById("empty-email");
            if (liElem !== null) {
                liElem.remove();
            }
        } if (email.length > 125) {
            const liElem = document.createElement('li');
            liElem.id = "max-email"
            liElem.innerHTML = "لطفا ایمیل خود را کمتر از 250 کرکتر وارد کرد";
            if (document.getElementById(liElem.id) === null)
                errUl.appendChild(liElem);
        }else {
            const liElem = document.getElementById("max-email");
            if (liElem !== null) {
                liElem.remove();
            }
        } if (text === "") {
            const liElem = document.createElement('li');
            liElem.id = "empty-text"
            liElem.innerHTML = "لطفا نظر خود را وارد کرد";
            if (document.getElementById(liElem.id) === null)
                errUl.appendChild(liElem);
        }else {
            const liElem = document.getElementById("empty-text");
            if (liElem !== null) {
                liElem.remove();
            }
        } if (text.length > 350) {
            const liElem = document.createElement('li');
            liElem.id = "max-text"
            liElem.innerHTML = "لطفا نظر خود را کمتر از 350 کرکتر وارد کرد";
            if (document.getElementById(liElem.id) === null)
                errUl.appendChild(liElem);
        }else {
            const liElem = document.getElementById("max-text");
            if (liElem !== null) {
                liElem.remove();
            }
        } if (errUl.childElementCount === 0) {
            fetch(`/articles/addcomment?userName=${name}&email=${email}&text=${text}&articleId=@Model.Id&parentId=${parentId}`)
                .then(r => r.json())
                .then(d => {
                    if (d.success === true) {
                        const elem = document.createElement('div');
                        if (parentId !== null) {
                            const parentElem = document.querySelector(`div[data-comment-id='${parentId}']>div.response-container`);
                            elem.innerHTML = `<div data-comment-id="${d.data.id}" class="response-comment border-top pt-2 ">
                            <h4 class="alert-heading ">
                                ${name}
                                <i class="bi bi-person-fill "></i>
                                <span class="h6 "> نوشته شده در تاریخ ${d.data.date} </span>
                            </h4>
                            <p class="mr-3 ">${text}</p>
@if (isAdmin)
                            {
                                <button class="btn btn-danger btn-sm response-btn" onclick="removeComment(${d.data.id})">حذف</button>
                            }

                            </div>`;
                            parentElem.appendFirst(elem);
                            cancelResponse();
                        }
                        else {

                        elem.innerHTML = `
                    <div data-comment-id="${d.data.id}" class="alert border mt-4 comment-box " role="alert">
                        <h4 class="alert-heading name-person-comment ">
                            ${name}
                            <i class="bi bi-person-fill "></i>
                            <span class="h6 "> نوشته شده در تاریخ ${d.data.date} </span>
                            <button class="btn btn-success btn-sm response-btn" onclick="responseComment(${d.data.id})">پاسخ</button>
                        </h4>
                        <p>${text}</p>
                            @if (isAdmin)
                            {
                                <button class="btn btn-danger btn-sm response-btn" onclick="removeComment(${d.data.id})">حذف</button>
                            }
                        <div class="response-container">
                        </div>
                    </div>`;
                        document.querySelector('.containers-comment').appendFirst(elem);
                        }
                        document.getElementById('text').value = "";
                    }

                })
        }
    }
    const responseComment = (id) => {
        parentId = id;
        const cancelElem = document.querySelector("#cancel-response");
        if (cancelElem.classList.contains('hidden')) {
            cancelElem.classList.remove('hidden');
        }
    }
    const cancelResponse = () => {
        parentId = null;
        const cancelElem = document.querySelector("#cancel-response");
        cancelElem.classList.add('hidden');
        }
    </script>
    @if (isAdmin)
    {
        <script>
            const removeComment = (id) => {
                fetch('/articles/RemoveComment/' + id)
                    .then(r => r.json())
                    .then(d => {
                        console.log(d);
                        if (d.success === true) {
                            document.querySelector(`div[data-comment-id='${id}']`).remove();
                        }
                    }).catch(err => console.log(err));
            }
        </script>
    }
}