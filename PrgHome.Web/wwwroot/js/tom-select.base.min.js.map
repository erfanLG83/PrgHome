{"version":3,"file":"tom-select.base.min.js","sources":["../../src/contrib/microevent.js","../../src/contrib/sifter.ts","../../src/contrib/highlight.js","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/vanilla.ts","../../src/tom-select.ts","../../src/contrib/microplugin.js","../../src/getSettings.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(event, fct){\n\t\tthis._events[event] = this._events[event] || [];\n\t\tthis._events[event].push(fct);\n\t}\n\n\toff(event, fct){\n\t\tvar n = arguments.length;\n\t\tif (n === 0) return delete this._events;\n\t\tif (n === 1) return delete this._events[event];\n\n\t\tthis._events = this._events || {};\n\t\tif (event in this._events === false) return;\n\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t}\n\n\ttrigger(event /* , args... */){\n\t\tthis._events = this._events || {};\n\t\tif (event in this._events === false) return;\n\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\t}\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TOptions = {\n \tfields: string|string[],\n \tsort: any[],\n \tscore?: ()=>any,\n \tfilter?: boolean,\n \tlimit?: number,\n \tsort_empty?: any,\n \tnesting?: boolean,\n\trespect_word_boundaries?: boolean,\n\tconjunction?: string,\n }\n\n\ntype TPrepareObj = {\n\toptions: TOptions,\n\tquery: string,\n\ttokens: any,\n\ttotal: number,\n\titems: any[]\n}\n\n\n\n// utilities\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nvar cmp = function(a, b) {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(String(a || ''));\n\tb = asciifold(String(b || ''));\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @param  {Boolean} nesting Handle nesting or not\n * @return {Object}          The resolved property value\n */\nvar getattr = function(obj, name, nesting) {\n    if (!obj || !name) return;\n    if (!nesting) return obj[name];\n    var names = name.split(\".\");\n    while(names.length && (obj = obj[names.shift()]));\n    return obj;\n};\n\nvar escape_regex = function(str) {\n\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n};\n\nvar DIACRITICS = {\n\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t'f': '[fƑƒḞḟ]',\n\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t'x': '[xẌẍẊẋχ]',\n\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n};\n\nvar asciifold = (function() {\n\tvar i, n, k, chunk;\n\tvar foreignletters = '';\n\tvar lookup = {};\n\tfor (k in DIACRITICS) {\n\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\tforeignletters += chunk;\n\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t}\n\t\t}\n\t}\n\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\treturn function(str) {\n\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\treturn lookup[foreignletter];\n\t\t}).toLowerCase();\n\t};\n})();\n\n\nexport default class Sifter{\n\n\tpublic items: []|{};\n\tpublic settings: {diacritics:boolean};\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tconstructor(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\ttokenize(query, respect_word_boundaries) {\n\t\tquery = String(query || '').toLowerCase().trim();\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (respect_word_boundaries) regex = \"\\\\b\"+regex\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\titerator(object, callback) {\n\t\tvar iterator;\n\t\tif (Array.isArray(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options?:TOptions ){\n\t\tvar self, fields, tokens, token_count, nesting, search;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(query, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(search, options:TOptions) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {string}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string|TPrepareObj, options:TOptions):TPrepareObj {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = Object.assign({},options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !Array.isArray(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !Array.isArray(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !Array.isArray(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query, options.respect_word_boundaries),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:TOptions) : TPrepareObj {\n\t\tvar self = this, score, search;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nexport function highlight(element, pattern) {\n\tif (typeof pattern === 'string' && !pattern.length) return;\n\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\n\tvar highlight = function(node) {\n\t\tvar skip = 0;\n\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\tif (node.nodeType === 3) {\n\t\t\tvar pos = node.data.search(regex);\n\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\tspannode.className = 'highlight';\n\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\tskip = 1;\n\n\t\t\t}\n\t\t}\n\t\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t\treturn skip;\n\t};\n\n\thighlight( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport function removeHighlight(el) {\n\tvar elements = document.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el, i){\n\t\tvar parent = el.parentNode;\n\t\tparent.replaceChild(el.firstChild, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tscrollDuration: 60,\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart,\n\t\tlength\t: input.selectionEnd - input.selectionStart,\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback:EventListener, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport function getDom( query:any ):HTMLElement{\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport function escapeQuery(query:string):string{\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport function triggerEvent( dom_el:HTMLElement, event_name:string ):void{\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport function applyCSS( dom_el:HTMLElement, css:{ [key: string]: string|number }):void{\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport function addClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export function removeClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport function classesArray(args:string[]|string[][]):string[]{\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport function castAsArray(arg:any):Array<any>{\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport function parentMatch( target:HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void{\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * < 0 - left (first)\n *\n */\nexport function getTail( list:Array<any>|NodeList, direction:number ):any{\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport function isEmptyObject(obj:object):boolean{\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport function nodeIndex( el:Element, amongst?:string ):number{\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from './contrib/sifter.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex\n} from './vanilla';\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreBlur\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: HTMLElement = null;\n\tpublic activeItems\t\t\t\t: HTMLElement[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar inputId;\n\t\tvar input\t\t\t= self.input;\n\t\tconst passive_event = { passive: true };\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self.render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\n\t\tdropdown_content\t= getDom('<div style=\"scroll-behavior: smooth;\">')\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tcontrol_input.setAttribute(attr, input.getAttribute(attr) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\n\t\tif( inputId = input.getAttribute('id') ){\n\t\t\tcontrol_input.setAttribute('id', inputId + '-tomselected');\n\n\t\t\tlet query = \"label[for='\"+escapeQuery(inputId)+\"']\";\n\t\t\tlet label = document.querySelector(query);\n\t\t\tif( label ) label.setAttribute('for', inputId + '-tomselected');\n\t\t}\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tinput.setAttribute('multiple','multiple');\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tcontrol_input.setAttribute('placeholder', settings.placeholder);\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t}\n\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onOptionHover( e as MouseEvent, target_match );\n\t\t\t}\n\t\t}, {capture:true});\n\n\t\taddEvent(control,'mousedown', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onItemSelect(evt as MouseEvent, target_match);\n\t\t\t}\n\t\t\treturn self.onMouseDown(evt as MouseEvent);\n\t\t});\n\n\t\taddEvent(control,'click', (e) => self.onClick(e as KeyboardEvent) );\n\n\n\t\taddEvent(control_input,'mousedown',\t(e) => e.stopPropagation() );\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t(e) => self.onBlur(e as MouseEvent) );\n\t\taddEvent(control_input,'focus',\t\t(e) => { self.ignoreBlur = false; self.onFocus(e as MouseEvent) });\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\t// clicking anywhere in the control should not close the dropdown\n\t\t// clicking on an option should selectit\n\t\tvar doc_mousedown = (e:MouseEvent) => {\n\n\t\t\t// if dropdownParent is set, options may not be within self.wrapper\n\t\t\tvar option = parentMatch(e.target as HTMLElement, '[data-selectable]',self.dropdown);\n\n\t\t\t// outside of this instance\n\t\t\tif( !option && !self.wrapper.contains(e.target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreventDefault(e,true);\n\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( e, option );\n\t\t\t}\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\t\tvar win_hover = () => {\n\t\t\tself.ignoreHover = false;\n\t\t};\n\n\n\t\taddEvent(document,'mousedown',doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\t\taddEvent(window,'mousemove', win_hover, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('mousemove',win_hover);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original children and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tvar children = [];\n\t\twhile( input.children.length > 0 ){\n\t\t\tchildren.push( input.children[0] );\n\t\t\tinput.children[0].remove();\n\t\t}\n\t\tthis.revertSettings = {\n\t\t\tchildren : children,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.setAttribute('hidden','hidden');\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.setValue(settings.items);\n\t\tdelete settings.items;\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.refreshState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div style=\"display:none\"></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick(e:MouseEvent|KeyboardEvent) {\n\t\tvar self = this;\n\n\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t// is ignored unless invoked within a click event)\n\t\t// also necessary to reopen a dropdown that has been closed by\n\t\t// closeAfterSelect\n\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\tself.focus();\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a mouse down event.\n\t *\n\t */\n\tonMouseDown(e:MouseEvent|KeyboardEvent):boolean {\n\t\tvar self = this;\n\n\n\t\tif (self.isFocused) {\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\tif (e.target !== self.control_input) {\n\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t// toggle dropdown\n\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t} else {\n\t\t\t\t\tself.setActiveItem();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\t// give control focus\n\t\t\tsetTimeout(() => self.focus(), 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next, true );\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev, true);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// doc_src select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.activeOption) {\n\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\tself.tab_key = false;\n\t\t\t\t}\n\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.setActiveItem();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\n\t\tif (!self.ignoreBlur && document.activeElement === self.dropdown_content) {\n\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\tself.ignoreBlur = true;\n\t\t\tself.onFocus(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setActiveOption();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.refreshState();\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):boolean{\n\t\tif (this.ignoreHover) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.settings.hideSelected && evt.type && /mouse/.test(evt.type)) {\n\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:HTMLElement ):boolean{\n\t\tvar self = this;\n\n\t\tif (self.isLocked) return;\n\t\tif (self.settings.mode === 'multi') {\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t}\n\t}\n\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\n\t\tvar self = this;\n\t\tvar fn = self.settings.load;\n\t\tif (!fn) return;\n\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\n\t\tfn.call(self, value, function(options:TomOption[], optgroups:TomOption[]){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tself.lastQuery = null;\n\n\t\t\tself.setupOptions(options,optgroups);\n\n\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\t\tif (!self.loading) {\n\t\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t\t}\n\n\t\t\tself.trigger('load', options, optgroups);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.1\n\t *\n\t */\n\tonSearchChange(value:string):void {\n\t\tthis.load(value);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string) {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:HTMLElement, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tremoveClasses(self.activeItems,'active');\n\t\t\tself.activeItems = [];\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'mousedown' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as HTMLElement;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'mousedown' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tremoveClasses(self.activeItems,'active');\n\t\t\tself.activeItems = [];\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:HTMLElement ){\n\n\t\tvar last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tif( this.activeItems.indexOf(item) == -1 ){\n\t\t\tthis.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:HTMLElement ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option?:HTMLElement, scroll?:boolean ){\n\t\tvar height_menu, height_item, y;\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.activeOption ) removeClasses(this.activeOption,'active');\n\t\tthis.activeOption = null;\n\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\taddClasses(option,'active');\n\n\t\tif( scroll ){\n\n\t\t\theight_menu\t\t= this.dropdown_content.clientHeight;\n\t\t\tlet scrollTop\t= this.dropdown_content.scrollTop || 0;\n\n\t\t\theight_item\t\t= this.activeOption.offsetHeight;\n\t\t\ty\t\t\t\t= this.activeOption.getBoundingClientRect().top - this.dropdown_content.getBoundingClientRect().top + scrollTop;\n\n\t\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\t\tthis.dropdown_content.scrollTop = y - height_menu + height_item;\n\n\t\t\t} else if (y < scrollTop) {\n\t\t\t\tthis.dropdown_content.scrollTop = y;\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t */\n\thideInput() {\n\n\t\tif( this.settings.controlInput ) return;\n\n\t\tthis.setTextboxValue('');\n\t\tapplyCSS(this.control_input, {opacity: 0, position: 'absolute', left: (this.rtl ? 10000 : -10000)+'px'} );\n\t\tthis.isInputHidden = true;\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t */\n\tshowInput() {\n\n\t\tif( this.settings.controlInput ) return;\n\n\t\tapplyCSS(this.control_input, {opacity: 1, position: 'relative', left: 0} );\n\t\tthis.isInputHidden = false;\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur(null);\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/brianreavis/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar sort;\n\t\tvar settings = this.settings;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar settings = self.settings;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif (settings.score) {\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif (settings.hideSelected) {\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, groups_order, optgroup, optgroups, html, has_create_option;\n\t\tvar active, create;\n\t\tvar groups: {[key:string]:DocumentFragment};\n\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_before_hash\t\t= self.activeOption && hash_key(self.activeOption.dataset.value);\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tgroups = {};\n\t\tgroups_order = [];\n\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= hash_key(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self.render('option', option);\n\t\t\t}\n\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// a child could only have one parent, so if you have more parents clone the child\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tgroup_options.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\tgroup_options.appendChild(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.appendChild(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tself.dropdown_content.innerHTML = '';\n\t\tself.dropdown_content.appendChild(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( self.dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( self.dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add \"selected\" class to selected options\n\t\tif (!self.settings.hideSelected) {\n\t\t\tfor( const item of self.items ){\n\t\t\t\tlet option = self.getOption(item)\n\t\t\t\tif( option ){\n\t\t\t\t\taddClasses(option,'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tself.dropdown_content.insertBefore(content, self.dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tactive = active_before_hash && self.getOption(active_before_hash);\n\n\t\t\t\tif( !active || !self.dropdown_content.contains(active)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive = create;\n\t\t\t}\n\n\t\t\tself.setActiveOption(active);\n\t\t\tif( triggerDropdown && !self.isOpen ){ self.open(); }\n\n\t\t}else{\n\t\t\tself.setActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){ self.close(); }\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.options[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tvar self = this;\n\t\tvar item, item_new;\n\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\tvalue     = hash_key(value);\n\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif (value === null) return;\n\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\torder_old = self.options[value].$order;\n\n\t\t// update references\n\t\tif (value_new !== value) {\n\t\t\tdelete self.options[value];\n\t\t\tindex_item = self.items.indexOf(value);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\t\t}\n\t\tdata.$order = data.$order || order_old;\n\t\tself.options[value_new] = data;\n\n\t\t// invalidate render cache\n\t\tcache_items = self.renderCache['item'];\n\t\tcache_options = self.renderCache['option'];\n\n\t\tif (cache_items) {\n\t\t\tdelete cache_items[value];\n\t\t\tdelete cache_items[value_new];\n\t\t}\n\t\tif (cache_options) {\n\t\t\tdelete cache_options[value];\n\t\t\tdelete cache_options[value_new];\n\t\t}\n\n\t\t// update the item if it's selected\n\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\titem\t\t= self.getItem(value);\n\t\t\titem_new\t= self.render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\titem.parentNode.insertBefore(item_new, item);\n\t\t\titem.remove();\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\n\t\t// update dropdown contents\n\t\tif (self.isOpen) {\n\t\t\tself.refreshOptions(false);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tvar self = this;\n\t\tvalue = hash_key(value);\n\n\t\tvar cache_items = self.renderCache['item'];\n\t\tvar cache_options = self.renderCache['option'];\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t * @returns {object}\n\t */\n\tgetOption(value:string):HTMLElement {\n\n\t\t// cached ?\n\t\tif( this.renderCache['option'].hasOwnProperty(value) ){\n\t\t\treturn this.renderCache['option'][value];\n\t\t}\n\n\t\t// from existing dropdown menu dom\n\t\treturn this.getElementWithValue(value, this.selectable());\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t *\n\t */\n\tgetAdjacent( option:HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|void{\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar self\t\t= this;\n\t\tvar type_class\t= self.settings.optionClass;\n\t\tvar parent\t\t= self.dropdown;\n\n\t\tif( type == 'item' ){\n\t\t\tparent\t\t= self.control;\n\t\t\ttype_class\t= self.settings.itemClass;\n\t\t}\n\n\t\tvar all\t\t\t= parent.querySelectorAll('.'+type_class);\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the first element with a \"data-value\" attribute\n\t * that matches the given value.\n\t *\n\t */\n\tgetElementWithValue(value:string, els:HTMLCollection|NodeList|HTMLElement[]):HTMLElement {\n\t\tvalue = hash_key(value);\n\n\t\tif (value !== null) {\n\t\t\tfor( const node of els ){\n\t\t\t\tlet el = node as HTMLElement;\n\t\t\t\tif (el.getAttribute('data-value') === value) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(value:string):HTMLElement {\n\t\treturn this.getElementWithValue(value, this.control.children);\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tthis.buffer = document.createDocumentFragment();\n\n\t\tfor( const child of this.control.children ){\n\t\t\tthis.buffer.appendChild(child);\n\t\t}\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tthis.isPending = (i < n - 1);\n\t\t\tthis.addItem(items[i], silent);\n\t\t}\n\n\t\tvar control = this.control;\n\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\n\t\tthis.buffer = null;\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item;\n\t\t\tvar self = this;\n\t\t\tvar inputMode = self.settings.mode;\n\t\t\tvar wasFull;\n\t\t\tvalue = hash_key(value);\n\n\t\t\tif( self.items.indexOf(value) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self.render('item', self.options[value]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tlet option = self.getOption(value);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', value, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( value:string, silent?:boolean ){\n\t\tvar i, idx, self = this;\n\n\t\tvar item\t= self.getItem(value);\n\n\t\tif( !item ) return;\n\n\t\tvalue\t\t= hash_key(item.dataset.value);\n\t\ti\t\t\t= self.items.indexOf(value);\n\n\t\tif (i !== -1) {\n\t\t\titem.remove();\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\t\tself.activeItems.splice(idx, 1);\n\t\t\t\tremoveClasses(item,'active');\n\t\t\t}\n\n\t\t\tself.items.splice(i, 1);\n\t\t\tself.lastQuery = null;\n\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\tself.removeOption(value, silent);\n\t\t\t}\n\n\t\t\tif (i < self.caretPos) {\n\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t}\n\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.positionDropdown();\n\t\t\tself.trigger('item_remove', value, item);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input?:string, triggerDropdown:boolean=true, callback?:TomCreateCallback ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue('');\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput(opts:TomArgObject = {}) {\n\t\tvar options, label, self = this;\n\n\t\tif( self.is_select_tag ){\n\t\t\toptions = [];\n\t\t\tfor( const item of self.items ){\n\t\t\t\tlabel = self.options[item][self.settings.labelField] || '';\n\t\t\t\toptions.push('<option value=\"' + escape_html(item) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t}\n\t\t\tif (!options.length && !this.input.hasAttribute('multiple')) {\n\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t}\n\t\t\tself.input.innerHTML = options.join('');\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t\tself.input.setAttribute('value',self.input.value);\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.input.value );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose() {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\tself.hideInput();\n\n\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t// See #selectize.js#1164\n\t\t\tif( !self.tab_key ){\n\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tself.setActiveOption();\n\t\tself.refreshState();\n\t\tself.setTextboxValue('');\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.setActiveItem();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.buffer || self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, values, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tvalues = [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\tvalues.push( item.dataset.value );\n\t\t\t}\n\t\t\tpreventDefault(e,true);\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\t\twhile (values.length) {\n\t\t\tself.removeItem(values.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, self = this;\n\n\t\tif (direction === 0) return;\n\t\tif (self.rtl) direction *= -1;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tlet adjacent\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if (self.isFocused && !self.isInputHidden) {\n\n\t\t\tif( !self.inputValue().length ){\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\n\t\t// move caret before or after selected items\n\t\t} else {\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t */\n\tsetCaret(i:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\ti = self.items.length;\n\t\t} else {\n\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t}\n\n\t\tif (!self.settings.controlInput && !self.isPending) {\n\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t// on mobile webkit devices\n\t\t\tvar j, child,\n\t\t\tchildren = self.controlChildren(),\n\t\t\tn = children.length;\n\n\t\t\tfor( j = 0; j < n; j++ ){\n\t\t\t\tchild = children[j];\n\n\t\t\t\tif( j < i ){\n\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t} else {\n\t\t\t\t\tself.control.appendChild(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = i;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren(){\n\t\treturn Array.prototype.filter.call( this.control.children, (node:HTMLElement) => node.nodeName !== 'INPUT' );\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = '';\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tself.input.removeAttribute('hidden');\n\t\tself.input.required = this.isRequired;\n\n\t\tfor( const child of revertSettings.children ){\n\t\t\tself.input.appendChild( child );\n\t\t}\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\t\tvar value, id, html;\n\t\tvar self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif( self.renderCache[templateName].hasOwnProperty(value) ){\n\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t}\n\n\t\t}\n\n\t\tvar template = self.settings.render[templateName];\n\t\tif( typeof template !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = template.call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\thtml.setAttribute('data-selectable', '');\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\thtml.setAttribute('data-group', id);\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\thtml.setAttribute('data-disabled', '');\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\thtml.setAttribute('data-value', value );\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ){\n\t\tvar self = this;\n\n\t\tif (templateName === void 0) {\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && input.length && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:()=>any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\n\treturn class mixin extends Interface{\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings\t\t\t\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element\t\t= {\n\t\t\t\t\t\t\t\t\t\tplaceholder\t: placeholder,\n\t\t\t\t\t\t\t\t\t\toptions\t\t: [],\n\t\t\t\t\t\t\t\t\t\toptgroups\t: [],\n\t\t\t\t\t\t\t\t\t\titems\t\t: [],\n\t\t\t\t\t\t\t\t\t\tmaxItems\t: null,\n\t\t\t\t\t\t\t\t\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar option_data             = readData(option);\n\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\n\t\t\toptionsMap[value] = option_data;\n\t\t\toptions.push(option_data);\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n"],"names":["MicroEvent","constructor","_events","on","event","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","i","apply","Array","prototype","slice","call","cmp","a","b","asciifold","String","getattr","obj","name","nesting","names","split","shift","DIACRITICS","k","chunk","foreignletters","lookup","hasOwnProperty","substring","charAt","regexp","RegExp","str","replace","foreignletter","toLowerCase","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","trim","regex","letter","tokens","words","string","iterator","object","callback","isArray","forEach","key","getScoreFunction","options","fields","token_count","search","prepareSearch","field_count","scoreValue","value","token","score","pos","scoreObject","data","sum","conjunction","getSortFunction","self","field","fields_count","multiplier","multipliers","get_field","implicit_score","sort","sort_empty","result","id","unshift","direction","option_fields","Object","assign","option_sort","option_sort_empty","total","fn_sort","fn_score","item","filter","limit","highlight","element","pattern","node","skip","nodeType","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","scrollDuration","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","shouldLoad","render","hash_key","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getDom","jquery","HTMLElement","div","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","map","el","cls","classList","add","removeClasses","remove","args","_classes","concat","Boolean","arg","parentMatch","selector","wrapper","contains","matches","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","TomSelect","Interface","initializePlugins","queue","requested","loaded","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","input","tabIndex","is_select_tag","rtl","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","userOptions","renderCache","delay","timeout","tomselect","window","getComputedStyle","getPropertyValue","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","placeholder","getAttribute","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","getSettings","required","load","Math","max","clearTimeout","setTimeout","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","inputId","passive_event","passive","append","attr","setAttribute","escapeQuery","label","width","join","delimiterEscaped","e","target_match","onOptionHover","capture","onItemSelect","onMouseDown","onClick","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","onOptionSelect","blur","win_scroll","win_hover","removeEventListener","revertSettings","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","focus","close","open","setActiveItem","isFull","pastedText","inputValue","splitInput","piece","createItem","character","fromCharCode","keyCode","which","constants","selectAll","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","activeElement","deactivate","setCaret","parentElement","lastQuery","addItem","getOption","onSearchChange","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","height_menu","height_item","y","clientHeight","scrollTop","offsetHeight","getBoundingClientRect","top","controlChildren","opacity","position","left","getSearchOptions","calculateScore","triggerDropdown","j","groups_order","html","has_create_option","active","groups","elements","results","active_before_hash","show_dropdown","min","opt_value","option_el","createDocumentFragment","$order","group_options","group_html","querySelectorAll","parent","normalize","tok","add_template","template","content","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","removeOption","removeItem","clearOptions","getElementWithValue","type_class","all","els","buffer","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","toggle","keys","checkValidity","invalid","opts","visibility","display","context","rect","scrollY","scrollX","selection","start","selectionStart","selectionEnd","onDelete","pop","adjacent","enable","destroy","removeAttribute","templateName","hook","when","method","new_fn","orig_method","result_new"],"mappings":"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"}